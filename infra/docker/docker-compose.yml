version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: la_ventanita
      POSTGRES_USER: ventanita_user
      POSTGRES_PASSWORD: superseguro
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ventanita_user -d la_ventanita"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  api:
    build:
      context: ../../apps/api
      dockerfile: ../../infra/docker/Dockerfile.api
    ports:
      - "8090:8090"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=la_ventanita
      - DB_USER=ventanita_user
      - DB_PASSWORD=superseguro
      - REDIS_URL=redis://redis:6379/0
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin123
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../../apps/api:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8090 --reload

  # Next.js Frontend
  web:
    build:
      context: ../../apps/web
      dockerfile: ../../infra/docker/Dockerfile.web
    ports:
      - "3100:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8090
    depends_on:
      - api
    volumes:
      - ../../apps/web:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
  redis_data: